@*<AuthorizeView Roles="Iron Man">
        <NotAuthorized>
            <div class="authContainer">
                <div>Get acces to all your lists anywhere</div>
                <button @onclick="Login" class="btn btn-primary">Login</button>
                <button @onclick="Register" class="btn btn-primary">Register</button>
            </div>
        </NotAuthorized>
        <Authorized>
            <div class="authContainer">
                <div>You successfully logged out</div>
                <button @onclick="Cancel" class="btn btn-secondary">Ok</button>
            </div>
        </Authorized>
    </AuthorizeView>*@

<div id="myModal" class="modal">
    <!-- Modal content -->
    <div class="modal-content">
        <button class="close" @onclick="ClosePopup">&times;</button>

        <label class="switch">
            <input type="checkbox" id="togBtn" @onchange="LoginRegisterToggle">
            <div class="slider round">
                <span class="on"></span>
                <span class="off"></span>
            </div>
        </label>

        <input class="input" maxlength="60" placeholder="Username" />
        <input type="password" class="input" maxlength="255" placeholder="Password" />
        <input type="email" class="input @EmailDisplay" maxlength="255" placeholder="Email" />

        <button class="submit" @onclick="Submit">@Title</button>
    </div>

</div>

@code {

    string Title = "Login";
    string EmailDisplay = "email-hidden";

    [Parameter]
    public EventCallback Close { get; set; }

    [Parameter]
    public EventCallback SendData { get; set; }

    private void LoginRegisterToggle()
    {
        Title = Title == "Login" ? "Register" : "Login";
        EmailDisplay = EmailDisplay == "email-hidden" ? "email-visible" : "email-hidden";
    }

    async Task ClosePopup()
    {
        await Close.InvokeAsync();
    }

    async Task Submit()
    {
        await SendData.InvokeAsync();
    }
}