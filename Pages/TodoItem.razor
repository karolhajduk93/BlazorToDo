@using BlazorToDoApp.Models
@inject AppState AppState

<fieldset class="item">
    <input type="checkbox" class="checkbox" id="@Model.Id" @onchange="ToggleCheckbox" />
    <label for="@Model.Id" class="@(Model.Checked ? "checkbox-label-checked" : "checkbox-label")">
        <div class="check-sign"></div>
    </label>
    <div class="todo-item-text"> @Model.Text</div>
    <button class="delete-button" @onclick="RemoveTodoItem"></button>
    <legend class="date">@Model.Date</legend>
</fieldset>

<br />

@code {
    [Parameter]
    public TodoItemModel Model { get; set; }

    [Parameter]
    public EventCallback<Tuple<TodoItemModel, string>> UpdateHappened { get; set; }

    private void ToggleCheckbox()
    {
        Model.Checked = !Model.Checked;
        Model.IdCompleted = Model.Checked ? TodoItemModel.IdCompletedIncrementer++ : -1;
        UpdateHappened.InvokeAsync(new Tuple<TodoItemModel, string>(Model, "toggle"));
        StateHasChanged();
    }

    private void RemoveTodoItem()
    {
        UpdateHappened.InvokeAsync(new Tuple<TodoItemModel, string>(Model, "remove"));
        StateHasChanged();
    }

}
